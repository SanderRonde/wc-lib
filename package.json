{
	"name": "wclib",
	"bin": {
		"wclib": "./bin/bin.js",
		"wc-lib": "./bin/bin.js"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/SanderRonde/wc-lib.git"
	},
	"version": "1.0.0",
	"description": "A webcomponent framework",
	"main": "build/es/wclib.js",
	"browser": "build/es/wclib.js",
	"module": "build/cjs/wclib.js",
	"author": "Sander Ronde <awsdfgvhbjn@gmail.com>",
	"license": "MIT",
	"files": [
		"bin/bin.js",
		"buld/**"
	],
	"private": true,
	"dependencies": {
		"@types/fs-extra": "^7.0.0",
		"@types/glob": "^7.1.1",
		"@types/gulp": "^4.0.6",
		"@types/gulp-replace": "^0.0.31",
		"@types/node": "^11.13.7",
		"fs-extra": "^8.0.1",
		"gulp": "^4.0.2",
		"gulp-replace": "^1.0.0",
		"lit-html": "^1.1.0",
		"typescript": "^3.5.1"
	},
	"devDependencies": {
		"@types/http-server": "^0.10.0",
		"@types/react": "^16.8.23",
		"chai": "^4.2.0",
		"chai-jquery": "^2.1.0",
		"cypress": "^3.4.0",
		"glob": "^7.1.4",
		"http-server": "^0.11.1",
		"istanbul-lib-coverage": "^2.0.5",
		"jquery": "^3.4.1",
		"lodash": "^4.17.13",
		"nyc": "^14.1.1",
		"remap-istanbul": "^0.13.0",
		"ts-node": "^8.2.0"
	},
	"scripts": {
		"compile": "tsc -p src/tsconfig.cjs.json && tsc -p src/tsconfig.json",
		"compile:test": "tsc -p test/tsconfig.cjs.json && tsc -p test/tsconfig.json",
		"compile:bin": "tsc -p bin/tsconfig.json",
		"compile:all": "npm run compile:test && npm run compile && npm run compile:bin",
		"install": "npm run compile && npm run compile:bin && tsc gulpfile.ts && gulp removeIstanbulIgnoresCompiled && node -e \"require('fs').unlink('gulpfile.js', () => {})\"",
		"cypress": "node test/usage/test.js",
		"cypress:classes": "node test/usage/test.js --spec test/usage/integration/classes/**/*.spec.js && npm run coverage:remap",
		"cypress:lib": "node test/usage/test.js --spec test/usage/integration/lib/**/*.spec.js && npm run coverage:remap",
		"cypress:partial-classes": "node test/usage/test.js --spec test/usage/integration/partial-classes/**/*.spec.js && npm run coverage:remap",
		"cypress:properties": "node test/usage/test.js --spec test/usage/integration/properties/**/*.spec.js && npm run coverage:remap",
		"cypress:report": "npm run cypress && npm run coverage:remap",
		"test": "npm run compile:all && npm run cypress",
		"serve": "http-server -c-1 -p 1251 .",
		"coverage:prep": "npm run compile:all && gulp istanbulIgnoreTypescript && nyc instrument src/ instrumented/ && gulp replaceTestImports",
		"coverage:remap:lcov": "remap-istanbul -i .nyc_output/out.json -t lcovonly -o coverage/lcov.info",
		"coverage:remap:html": "remap-istanbul -i .nyc_output/out.json -t html -o coverage/",
		"coverage:remap": "tsc -p src/tsconfig.sourcemap.json && npm run coverage:remap:html && npm run coverage:remap:lcov",
		"coverage:post": "echo \"Coverage can be found in coverage/index.html\"",
		"coverage": "npm run coverage:prep && nyc --reporter=text npm run cypress:report && coverage:post",
		"coverage:classes": "npm run coverage:prep && nyc --reporter=text npm run cypress:classes && coverage:post",
		"coverage:lib": "npm run coverage:prep && nyc --reporter=text npm run cypress:lib && coverage:post",
		"coverage:partial-classes": "npm run coverage:prep && nyc --reporter=text npm run cypress:partial-classes && coverage:post",
		"coverage:properties": "npm run coverage:prep && nyc --reporter=text npm run cypress:properties && coverage:post",
		"prepublishOnly": "gulp removeIstanbulIgnoresSource"
	}
}
